{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","islargerow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","original_name","then","url","urlParams","URLSearchParams","URL","search","console","log","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","style","backgroundSize","backgroundImage","backgroundPosition","overview","length","substr","Nav","show","handleshow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1d9c1e3.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({baseURL :\"https://api.themoviedb.org/3/\",});\n\nexport default instance;","import {useState,useEffect} from 'react';\nimport axios from './axios';\nimport './row.css';\nimport Youtube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\nconst base_url=\"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({title, fetchUrl,islargerow}) {\n\n    const [movies,setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n    useEffect(()=>\n    {\n        async function fetchData()\n        {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n           \n            return request;\n        }\n        fetchData();\n    },[fetchUrl]);\n\n    const handleClick = (movie) =>{\n        if(trailerUrl)\n        {\n            setTrailerUrl(\"\");\n        }\n        else{\n            movieTrailer(movie?.title || movie?.name || movie?.original_name || \"\").then((url)=>\n            {\n                const urlParams =new URLSearchParams( new URL(url).search);\n                console.log(urlParams);\n                setTrailerUrl(urlParams.get(\"v\"));\n            }).catch((error) => console.log(error));\n        }\n    }\n\n\n    const opts = {\n        height: '380px',\n        width: '100%',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 1,\n        },\n      };\n    return (\n        <div className=\"row\">\n            <h2 className=\"row_title\">{title}</h2>\n            <div className=\"row__posters\">\n            {movies.map(movie => (\n                <img \n                key={movie.id} \n                onClick={() => handleClick(movie)}\n                className={`row__poster ${islargerow && \"row__posterlarge\"}`} \n                src={`${base_url}${islargerow ? movie.poster_path : movie.backdrop_path}`} \n                alt={movie.name}\n                />\n                ))}\n            </div>\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}/>}\n        </div>\n        \n    )\n}\n\nexport default Row","const API_KEY= \"2a6e2a0af87e977cbf99ad08c6b0142b\" ;\n\nconst requests = {\n    fetchTrending: `trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests;","import { useState,useEffect } from 'react';\nimport axios from './axios';\nimport requests from './requests';\nimport './banner.css';\n\nfunction Banner() {\n\n    const [movie,setMovie]= useState([]);\n\n    useEffect(() => {\n\n        async function fetchData() {\n            const request = await axios.get(requests.fetchTrending);\n            //console.log(request.data.results[Math.floor(Math.random() - 1 )]);\n            setMovie(request.data.results[Math.floor(Math.random())]);\n            return request;\n        }\n        fetchData();\n    }, []);\n\n    function truncate(str,n)\n    {\n        return str?.length > n ? str.substr(0,n-1) + \"...\" :str;\n    }\n\n\n\n\n    return (\n        <header className=\"banner\" \n        style={{backgroundSize:\"cover\",backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,backgroundPosition:\"center center\",}}>\n            <div className=\"banner_content\">\n                <h1 className=\"banner_title\">\n                   {movie?.title || movie?.name || movie?.original_name} \n                </h1>\n                <div className=\"banner_buttons\">\n                    <button className=\"banner_button\">Play</button>\n                    <button className=\"banner_button\">My List</button>\n                </div>    \n                <h1 className=\"banner_description\">{truncate(movie?.overview,152)}</h1>\n            </div>\n        <div className=\"fade_bottom\"></div>\n        </header>\n    )\n}\n\nexport default Banner\n","import {useState,useEffect} from 'react';\nimport './nav.css';\n\nfunction Nav() {\n   const [show, handleshow] = useState(false);\n    useEffect(() => {\n        window.addEventListener(\"scroll\",()=>{\n            if(window.scrollY>100)\n            {\n                handleshow(true);\n            }else{\n                handleshow(false);\n            }\n        });\n        return () => {\n            window.removeEventListener(\"scroll\");\n        }\n    }, []);\n\n\n\n    return (\n        <div className={`nav ${show && \"nav_black\"}`}>\n            <img className=\"nav_logo\" src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" alt=\"./\"/>\n        </div>\n    )\n}\n\nexport default Nav\n","import './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './nav.js';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row title=\"NETFILX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} islargerow/>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}